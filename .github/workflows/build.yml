name: legend-build

env:
  CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
  CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

on: [push, pull_request]
  
jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-mvn-deps
      with:
        path: ~/.m2
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 13
        server-id: ossrh
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: '14.3.0'
    - name: Configure git
      run: |
        git config --global committer.email "infra@finos.org"
        git config --global committer.name "FINOS Admin"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"
    - name: Download deps and plugins
      run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
    - name: Build + Test
      if: github.ref != 'refs/heads/master'
      run: mvn install javadoc:javadoc
    - name: Build + Test + Sonar + Maven Deploy
      if: github.ref == 'refs/heads/master'
      run: mvn javadoc:javadoc deploy -Psonar
