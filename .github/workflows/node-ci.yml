name: Node CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  # `github-actions` currently does not support cancelling previous CI runs
  # on pushes to the same branch. This is particularly useful when the build
  # is complicated and requires a lot of resources. If we ever need to setup
  # we can use `actions/workflow-run-cleanup-action`
  # See https://github.com/marketplace/actions/workflow-run-cleanup-action

  lint-and-check:
    name: Running TypeScript compiler & ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup Node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn
      - name: Check Typescript project reference configuration
        run: yarn check:project-ref
      - name: Build Typescript
        run: yarn build:ts
      - name: Check typings
        run: yarn check:typings
      - name: Run lint
        run: yarn lint
      - name: Check code formatting
        run: yarn check:format
      - name: Check copyright headers
        run: yarn copyright:check
#   test:
#     name: Node v${{ matrix.node-version }} on ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         node-version: [10.x, 12.x, 13.x, 14.x, 15.x]
#         os: [ubuntu-latest, macOS-latest, windows-latest]
#     runs-on: ${{ matrix.os }}

#     steps:
#       - name: Set git config
#         shell: bash
#         run: |
#           git config --global core.autocrlf false
#           git config --global core.symlinks true
#         if: runner.os == 'Windows'
#       - uses: actions/checkout@v2
#       - name: Get yarn cache
#         id: yarn-cache
#         run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
#       - uses: actions/cache@v2
#         with:
#           path: ${{ steps.yarn-cache.outputs.dir }}
#           key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v2.1.2
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install
#         run: yarn
#       - name: build
#         run: yarn build:js
#       - name: Get number of CPU cores
#         id: cpu-cores
#         uses: SimenB/github-actions-cpu-cores@v1
#       - name: run tests
#         run: yarn test-ci-partial:parallel --max-workers ${{ steps.cpu-cores.outputs.count }}
#         env:
#           CI: true

# name: legend-build

# env:
#   CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
#   CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
#   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# on: [push, pull_request]

# jobs:
#   build:
#     if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout repo
#       uses: actions/checkout@v2
#     - name: Cache Maven dependencies
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-mvn-deps
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
#     - name: Set up JDK
#       uses: actions/setup-java@v1
#       with:
#         java-version: 13
#         server-id: ossrh
#         server-username: CI_DEPLOY_USERNAME
#         server-password: CI_DEPLOY_PASSWORD
#     - name: Set up Node
#       uses: actions/setup-node@v1
#       with:
#         node-version: '14.3.0'
#     - name: Configure git
#       run: |
#         git config --global committer.email "infra@finos.org"
#         git config --global committer.name "FINOS Admin"
#         git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
#         git config --global author.name "${GITHUB_ACTOR}"
#     - name: Download deps and plugins
#       run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
#     - name: Build + Test
#       if: github.ref != 'refs/heads/master'
#       run: mvn install javadoc:javadoc
#     - name: Build + Test + Sonar + Maven Deploy
#       if: github.ref == 'refs/heads/master'
#       run: mvn javadoc:javadoc deploy -Psonar
